var eventy={EventySocket:{}};
(function(){function c(a){this.address=a=a.replace("http://","ws://");this._registeredEvents={}}c.prototype.connect=function(){var a=this;this.socket=new WebSocket(this.address);this._startLifeSupport();this.socket.onmessage=function(b){b=JSON.parse(b.data);if(a._registeredEvents[b.eventName])for(var c in a._registeredEvents[b.eventName].callbacks)a._registeredEvents[b.eventName].callbacks[c](b.data)}};c.prototype.disconnect=function(){this.socket.onclose=null;this.socket.close();this._onClose&&this._onClose()};
c.prototype.onConnection=function(a){if(!a)throw"Handler cannot be null.";this._onConnection=a};c.prototype.onClose=function(a){if(!a)throw"Handler cannot be null.";this._onClose=a};c.prototype.emit=function(a,b){if(!a)throw"Event name must be set.";a=a.toLowerCase();if("heartbeat"===a&&b)throw"Event name 'heartbeat' is reserved.";b||(b={});this.socket.send(JSON.stringify({eventName:a,room:null,data:b}))};c.prototype.on=function(a,b){this._registeredEvents[a]?this._registeredEvents[a].callbacks.push(b):
this._registeredEvents[a]={callbacks:[b]}};c.prototype._startLifeSupport=function(){var a=this;this._interval=6E4;var b=null;this.socket.onopen=function(){a._onConnection&&a._onConnection();b=setInterval(function(){a.emit("heartbeat")},a._interval)};this.socket.onclose=function(){clearInterval(b);a._interval-=1E4;if(2E4>=a._interval)throw this._onClose||this._onClose(),"Connection cannot be kept alive. Please check server.";c.call(this,this.address)}};eventy.EventySocket=c})();
